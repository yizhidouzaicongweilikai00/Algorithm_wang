贪心算法:
顾名思义，贪心算法总是作出在当前看来最好的选择。也就是说贪心算法并不从整体最优考虑，
它所做出的选择只是在某种意义上的局部最优选择。当然，希望贪心算法得到的最终结果也是
整体最优的。
虽然贪心算法不能对所有问题都得到整体最优解，但对于许多问题他能产生整体最优解。如单源
最短路径问题，最小生成树等等。在一些情况下，即使贪心算法不能得到整体最优解，其最终结果
却是与最优解很相似。


贪心算法的基本要素：
1.贪心选择
所谓贪心选择性质是指所求问题的整体最优解可以通过一系列局部最优的选择，即贪心选择来达到，
这是贪心算法可行的第一个基本要素，也是贪心算法与动态规划算法的主要区别。

动态规划算法通常以自底向上的方式解各子问题，而贪心算法则通常以自顶向下的方式进行，
以迭代的方式作出相继的贪心选择，每作一次贪心选择就将所求问题简化为规模更小的子问题。

对于一个具体问题，要确定它是否具有贪心选择性质，必须证明每一步所作的贪心选择
最终导致问题的整体最优解

2.最优子结构性质
 当一个问题的最优解包含其子问题的最优解时，称此问题具有最优子结构性质。
 问题的最优子结构性质是该问题可用动态规划算法或贪心算法求解的关键特征。
 
 贪心算法的基本思路：
 从问题的某一个初始解出发逐步逼近给定的目标，以尽可能的求得更好的解，
 当算法中的某一步不能再继续前进时，算法停止。
 
 该算法存在问题：
 1.不能保证求得的最后解是最佳的；
 2.不能用来求最大或最小解问题；
 3.只能求满足某些约束条件的可行解的范围
 
 
 算法步骤：
从问题的某一初始解出发；
    while （能朝给定总目标前进一步）
    { 
          利用可行的决策，求出可行解的一个解元素；
    }
    由所有解元素组合成问题的一个可行解；